<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.domain.Users">
    <constructor>
      <idArg column="id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="account" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_email" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_imit" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_group" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, account, password, name, phone, user_email, user_imit, user_group
  </sql>
  <select id="selectByAccount" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where account = #{account,jdbcType=VARCHAR}
  </select>
  <select id="selectById" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectByLimit" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from users
    where user_imit = 0
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from users
    where account = #{account,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.example.demo.domain.Users">
    insert into users (id, account, password, 
      name, phone, user_email, 
      user_imit, user_group)
    values (#{id,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, 
      #{userImit,jdbcType=INTEGER}, #{userGroup,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.domain.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="userImit != null">
        user_imit,
      </if>
      <if test="userGroup != null">
        user_group,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userImit != null">
        #{userImit,jdbcType=INTEGER},
      </if>
      <if test="userGroup != null">
        #{userGroup,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.domain.Users">
    update users
    <set>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userImit != null">
        user_imit = #{userImit,jdbcType=INTEGER},
      </if>
      <if test="userGroup != null">
        user_group = #{userGroup,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.domain.Users">
    update users
    set account = #{account,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_imit = #{userImit,jdbcType=INTEGER},
      user_group = #{userGroup,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>


</mapper>